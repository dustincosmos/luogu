/*
题目描述
小明很喜欢摆积木，现在他正在玩的积木是由N个木块组成的，他想用这些木块搭出两座高度相同的塔，一座塔的高度是搭建它的所有木块的高度和，并且一座塔至少要用一个木块。每个木块只能用一次，也可以不用。目前已知每块木块的高度，小明想知道在最终两个塔的高度相同的情况下，他所能搭的塔的最大高度是多少，你能帮助他吗？

输入格式
第一行为一个整数N，表示木块个数。

第二行是N个整数，表示N块木块的高度。

【数据规模】

对于100%的数据，N≤50，每块木块的高度h满足1≤h≤500000，所有木块的高度总和≤500000。

输出格式
仅一个整数，表示能搭建的塔的最大高度，若不能搭建两座相同高度的塔，则输出“-1”。

输入输出样例
输入 #1复制
3
2 3 5
输出 #1复制
5
*/
#include<bits/stdc++.h>
using namespace std;
int f[51][500001],s[5001],a[5001];
int main()
{
    int n;
    cin>>n;
    cin>>a[1];
    s[1]=a[1];
    for(int i=2;i<=n;i++)
    {
        cin>>a[i];
        s[i]=s[i-1]+a[i];
    }
    memset(f,-9999,sizeof(f));
    f[0][0]=0;
   // for(int j=0;j<=s[n];j++)
   //     f[1][j]=j;
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<=s[i];j++)
        {
            f[i][j]=max(f[i][j],f[i-1][j]);
            f[i][j]=max(f[i][j],f[i-1][j+a[i]]);
            if(j>=a[i])
                f[i][j]=max(f[i][j],f[i-1][j-a[i]]+a[i]);
            if(j<a[i])
                f[i][j]=max(f[i][j],f[i-1][a[i]-j]+j);
            
        }
    }
    if(f[n][0]<=0)
        cout<<"-1";
    else
        cout<<f[n][0];
    system("pause");
    return 0;
}
